<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<!-- universal log configuration, if necessary change only the log destination folder, please do not eliminate any defined appended or logger -->
	<include resource="org/springframework/boot/logging/logback/base.xml" />
	<include resource="org/springframework/boot/logging/logback/defaults.xml"/>	
	<property name="CONSOLE_LOG_PATTERN"
			  value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
	
	
	<springProperty scope="context" name="serviceName" source="spring.application.name" defaultValue="network-repository"/>	
	<springProperty scope="context" name="serviceHost" source="spring.cloud.client.hostname" defaultValue="###"/>
	<springProperty scope="context" name="servicePort" source="server.port" defaultValue="###"/>	
	
	<springProperty scope="context" name="logLocation" source="log.text.location" defaultValue="/home/ubuntu/CS/cs_cloud/log/user-repository"/>
   	<springProperty scope="context" name="logTextFileName" source="log.text.file.name" defaultValue="txt-log.txt"/>
   	<springProperty scope="context" name="logJsonFileName" source="log.json.file.name" defaultValue="json-log.json"/>
   	
   	<property name="METRIC_LOG_PATTERN" value="%m%n%wex"/>   	
   	<springProperty scope="context" name="logJsonPerformanceMetricFileName" source="log.json.performance.metric.file.name" defaultValue="performance-metric-log.json"/>   	
   	<springProperty scope="context" name="logJsonExceptionMetricFileName" source="log.json.exception.metric.file.name" defaultValue="exception-metric-log.json"/>   	
   	<springProperty scope="context" name="logJsonTraceMetricFileName" source="log.json.trace.metric.file.name" defaultValue="trace-metric-log.json"/>   	
   	<springProperty scope="context" name="logJsonBusinessMetricFileName" source="log.json.business.metric.file.name" defaultValue="business-metric-log.json"/>   	
  	   	
   	
   	<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
   	 <resetJUL>true</resetJUL>
	</contextListener>
   	
   	<appender name="fileTxtAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <file> ${logLocation}/${serviceName}-${logTextFileName} </file>
      <encoder>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
			<charset>utf8</charset>
		</encoder>
      <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <maxIndex>1</maxIndex>
            <fileNamePattern>${logLocation}/${serviceName}-${logTextFileName}.%i</fileNamePattern>
      </rollingPolicy>
      <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
      </triggeringPolicy>
   </appender>
    
    <appender name="fileJsonAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${logLocation}/${serviceName}-${logJsonFileName}</File>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <maxIndex>1</maxIndex>
            <fileNamePattern>${logLocation}/${serviceName}-${logJsonFileName}.%i</fileNamePattern>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<providers>
				<timestamp>
					<timeZone>UTC</timeZone>
				</timestamp>
				<pattern>
					<pattern>
						{
						"severity": "%level",
						"service": "${serviceName:-}",
						"trace": "%X{X-B3-TraceId:-}",
						"span": "%X{X-B3-SpanId:-}",
						"parent": "%X{X-B3-ParentSpanId:-}",
						"exportable": "%X{X-Span-Export:-}",
						"pid": "${PID:-}",
						"thread": "%thread",
						"class": "%logger{40}",
						"rest": "%message"
						}
					</pattern>
				</pattern>
			</providers>
		</encoder>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>
    
    <appender name="consoleJsonAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
    </appender>
    
    <appender name="consoleDefaultAppender" class="ch.qos.logback.core.ConsoleAppender">        
      <filter class="ch.qos.logback.classic.filter.LevelFilter"> 
         <level>DEBUG</level> 
         <onMatch>ACCEPT</onMatch> 
         <onMismatch>DENY</onMismatch> 
      </filter>   
      <encoder>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
			<charset>utf8</charset>
		</encoder> 
   </appender>
   
     
   <appender name="performanceMetricFileAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<pattern>${METRIC_LOG_PATTERN}</pattern>
		</encoder>
		<file>${logLocation}/${serviceName}-${logJsonPerformanceMetricFileName}</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logLocation}/${serviceName}-${logJsonPerformanceMetricFileName}.%i</fileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	
	<appender name="exceptionMetricFileAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<pattern>${METRIC_LOG_PATTERN}</pattern>
		</encoder>
		<file>${logLocation}/${serviceName}-${logJsonExceptionMetricFileName}</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logLocation}/${serviceName}-${logJsonExceptionMetricFileName}.%i</fileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	
	<appender name="traceMetricFileAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<pattern>${METRIC_LOG_PATTERN}</pattern>
		</encoder>
		<file>${logLocation}/${serviceName}-${logJsonTraceMetricFileName}</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logLocation}/${serviceName}-${logJsonTraceMetricFileName}.%i</fileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	
	<appender name="businessMetricFileAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<pattern>${METRIC_LOG_PATTERN}</pattern>
		</encoder>
		<file>${logLocation}/${serviceName}-${logJsonBusinessMetricFileName}</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logLocation}/${serviceName}-${logJsonBusinessMetricFileName}.%i</fileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>
    
    <logger name="PerformanceMetricLogger" level="DEBUG" additivity="false">
        <appender-ref ref="performanceMetricFileAppender"/>
    </logger>
    
    <logger name="ExceptionMetricLogger" level="DEBUG" additivity="false">
        <appender-ref ref="exceptionMetricFileAppender"/>
    </logger>
    
    <logger name="TraceMetricLogger" level="DEBUG" additivity="false">
        <appender-ref ref="traceMetricFileAppender"/>
    </logger>
    
    <logger name="BusinessMetricLogger" level="DEBUG" additivity="false">
        <appender-ref ref="businessMetricFileAppender"/>
    </logger>
    
    <logger name="com.smartride.msa" level="debug" />   
    <logger name="com.impetus.kundera" level="debug" />    
    
    <!-- <logger name="org.springframework" level="ALL" /> -->
    
    <root level="info">         
         <appender-ref ref="fileJsonAppender"/>
         <appender-ref ref="fileTxtAppender"/> 
         <appender-ref ref="consoleDefaultAppender"/>
    </root>   
    
</configuration>